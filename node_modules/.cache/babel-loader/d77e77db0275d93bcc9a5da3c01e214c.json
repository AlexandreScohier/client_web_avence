{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexandre\\\\IdeaProjects\\\\client_web_avence\\\\src\\\\component\\\\Login\\\\Connection.js\";\nimport React from \"react\";\nimport \"./connectionStyle.css\";\nimport { login } from \"../API\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Connection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errorMassage: false,\n      isConnected: undefined\n    };\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n\n    try {\n      const data = await login(this.state.email, this.state.password);\n\n      if (data.user.userRecup.userType !== \"mecano\") {\n        throw new Error(\"Un client ne peut pas se connecter à l'application!\");\n      } // localStorage.setItem(\"Token\",data.user.userType)\n\n\n      console.log(data);\n      this.setState({\n        isConnected: true\n      });\n    } catch (error) {\n      this.setState({\n        error: true,\n        loading: false,\n        loaded: true,\n        errorMessage: error\n      });\n    }\n  }\n\n  userChange(evt) {\n    this.setState({\n      email: evt.target.value\n    });\n  }\n\n  passwordChange(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n\n  render() {\n    if (this.state.isConnected) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"Se connecter \"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"row g-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"emailAdresse\",\n      placeholder: \"Adresse mail\",\n      value: this.state.email,\n      onChange: event => this.userChange(event),\n      autoFocus: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: event => this.passwordChange(event),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: event => {\n        this.handleSubmit(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"Connexion\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: user => {\n      dispatch({\n        type: \"login\",\n        payload: {\n          userInfo: user\n        }\n      });\n    }\n  };\n};\n\nexport default connect(undefined, mapDispatchToProps)(Connection);","map":{"version":3,"sources":["C:/Users/Alexandre/IdeaProjects/client_web_avence/src/component/Login/Connection.js"],"names":["React","login","connect","Redirect","Connection","Component","constructor","props","state","email","password","errorMassage","isConnected","undefined","handleSubmit","event","preventDefault","data","user","userRecup","userType","Error","console","log","setState","error","loading","loaded","errorMessage","userChange","evt","target","value","passwordChange","render","mapDispatchToProps","dispatch","type","payload","userInfo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./connectionStyle.css\";\r\nimport {login} from \"../API\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Connection extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password:'',\r\n            errorMassage: false,\r\n            isConnected: undefined};\r\n        \r\n    }\r\n    \r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        try{\r\n            const data = await login(this.state.email,this.state.password);\r\n            if(data.user.userRecup.userType !== \"mecano\") {\r\n                throw new Error(\"Un client ne peut pas se connecter à l'application!\");\r\n            }\r\n            // localStorage.setItem(\"Token\",data.user.userType)\r\n            console.log(data);\r\n            this.setState({isConnected:true});\r\n            \r\n        }catch (error) {\r\n            this.setState({\r\n                error : true,\r\n                loading:false,\r\n                loaded:true,\r\n                errorMessage:error\r\n            });\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    userChange(evt){\r\n        this.setState({email:evt.target.value});\r\n    }\r\n    passwordChange(evt){\r\n        this.setState({password:evt.target.value});\r\n    }\r\n\r\n\r\n    render() {\r\n            if(this.state.isConnected){\r\n                return <Redirect to={\"/\"}/>\r\n            }\r\n            return (\r\n                <div className=\"form\">\r\n                    <h1>Se connecter </h1>\r\n                    <form className=\"row g-3\">\r\n                    <input\r\n                     className=\"form-control\"\r\n                     type=\"text\"\r\n                     id=\"emailAdresse\"\r\n                     placeholder=\"Adresse mail\"\r\n                     value = {this.state.email}\r\n                     onChange ={(event)=>this.userChange(event)}\r\n                     autoFocus\r\n                     required\r\n                     ></input>\r\n\r\n                    <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value = {this.state.password}\r\n                    onChange ={(event)=>this.passwordChange(event)}\r\n                    required\r\n                    ></input>\r\n                    <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary\"\r\n                    onClick ={(event)=>{\r\n                        this.handleSubmit(event);\r\n                    }}\r\n                    >Connexion</button>\r\n                    </form>\r\n                </div>\r\n            )\r\n\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        login : (user)=>{\r\n            dispatch({type:\"login\", payload:{userInfo:user}})\r\n        }\r\n    }\r\n}\r\nexport default connect(undefined,mapDispatchToProps)(Connection);"]},"metadata":{},"sourceType":"module"}