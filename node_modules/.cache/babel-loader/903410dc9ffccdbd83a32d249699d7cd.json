{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\Desktop\\\\client_web_avence\\\\src\\\\component\\\\Garage\\\\RowReadGarage.js\";\nimport React from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\n\nconst RowReadGarage = _ref => {\n  let {\n    element,\n    handleEditClick,\n    index,\n    renderTableHeader\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, renderTableHeader(element).map((column, index) => {\n    if (column !== \"image\") {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 32\n        }\n      }, element[`${column}`]);\n    } else {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        height: \"60px\",\n        width: \"60px\",\n        src: element[`${column}`],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 48\n        }\n      }));\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: event => handleEditClick(event, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleEditClick(element.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"delete\")));\n};\n\nexport default RowReadGarage;","map":{"version":3,"sources":["C:/Users/matth/Desktop/client_web_avence/src/component/Garage/RowReadGarage.js"],"names":["React","Button","TextField","RowReadGarage","element","handleEditClick","index","renderTableHeader","map","column","event","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,mBAAhC;;AAEA,MAAMC,aAAa,GAAG,QAAwD;AAAA,MAAvD;AAACC,IAAAA,OAAD;AAAUC,IAAAA,eAAV;AAA2BC,IAAAA,KAA3B;AAAiCC,IAAAA;AAAjC,GAAuD;AAC1E,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAESA,iBAAiB,CAACH,OAAD,CAAjB,CAA2BI,GAA3B,CAA+B,CAACC,MAAD,EAAQH,KAAR,KAAgB;AAC5C,QAAGG,MAAM,KAAK,OAAd,EAAuB;AACnB,0BAAO;AAAI,QAAA,GAAG,EAAEH,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBF,OAAO,CAAE,GAAEK,MAAO,EAAX,CAAxB,CAAP;AACH,KAFD,MAEK;AACD,0BAAO;AAAI,QAAA,GAAG,EAAEH,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB;AAAK,QAAA,MAAM,EAAE,MAAb;AAAqB,QAAA,KAAK,EAAE,MAA5B;AAAoC,QAAA,GAAG,EAAEF,OAAO,CAAE,GAAEK,MAAO,EAAX,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,CAAP;AACH;AACJ,GANA,CAFT,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAIC,KAAK,IAAIL,eAAe,CAACK,KAAD,EAAOJ,KAAP,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAID,eAAe,CAACD,OAAO,CAACO,EAAT,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CAVJ,CADJ;AAsBH,CAvBD;;AAyBA,eAAeR,aAAf","sourcesContent":["import React from \"react\";\r\nimport {Button, TextField} from \"@material-ui/core\";\r\n\r\nconst RowReadGarage = ({element, handleEditClick ,index,renderTableHeader}) =>{\r\n    return(\r\n        <tr>\r\n            {\r\n                 renderTableHeader(element).map((column,index)=>{\r\n                    if(column !== \"image\") {\r\n                        return <td key={index}>{element[`${column}`]}</td>;\r\n                    }else{\r\n                        return <td key={index}><img height={\"60px\"} width={\"60px\"} src={element[`${column}`]}/></td>;\r\n                    }\r\n                })\r\n            }\r\n            <td>\r\n                <button type=\"button\" onClick= {(event => handleEditClick(event,index))}>\r\n                    edit\r\n                </button>\r\n                <button type=\"button\" onClick={()=>handleEditClick(element.id)}>\r\n                    delete\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    );\r\n\r\n}\r\n\r\nexport default RowReadGarage;"]},"metadata":{},"sourceType":"module"}