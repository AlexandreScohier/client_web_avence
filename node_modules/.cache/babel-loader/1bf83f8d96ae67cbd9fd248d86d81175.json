{"ast":null,"code":"import { createStore, combineReducers } from \"redux\";\nconst liste = [{\n  id: 1,\n  prenom: \"John\",\n  nom: \"Doe\",\n  age: 47\n}, {\n  id: 2,\n  prenom: \"Bob\",\n  nom: \"Boyar\",\n  age: 56\n}, {\n  id: 3,\n  prenom: \"Alice\",\n  nom: \"Doyen\",\n  age: 45\n}, {\n  id: 4,\n  prenom: \"Charlie\",\n  nom: \"Tango\",\n  age: 48\n}, {\n  id: 5,\n  prenom: \"Danielle\",\n  nom: \"Eden\",\n  age: 49\n}];\n\nconst employeReducer = (state = {\n  listeEmployes: liste\n}, action) => {\n  const listeEmployes = state.listeEmployes;\n  const newArray = [...listeEmployes];\n\n  switch (action.type) {\n    case \"updateEmploye\":\n      const updatedEmploye = action.payload.newEmploye;\n      const index = newArray.findIndex(em => em.id === updatedEmploye.id);\n      newArray[index] = updatedEmploye;\n      return {\n        listeEmployes: newArray\n      };\n\n    case \"addEmploye\":\n      const newEmploye = action.payload.newEmploye;\n      newEmploye.id = newArray.length + 1;\n      newArray.push(newEmploye);\n      return {\n        listeEmployes: newArray\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(combineReducers({\n  employes: employeReducer\n}));\nexport default store;","map":{"version":3,"sources":["C:/Users/matth/Desktop/développement de client avancé/Correction/react-component/src/store/index.js"],"names":["createStore","combineReducers","liste","id","prenom","nom","age","employeReducer","state","listeEmployes","action","newArray","type","updatedEmploye","payload","newEmploye","index","findIndex","em","length","push","store","employes"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,MAAM,EAAE,MAFZ;AAGIC,EAAAA,GAAG,EAAE,KAHT;AAIIC,EAAAA,GAAG,EAAE;AAJT,CADU,EAOV;AACIH,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,MAAM,EAAE,KAFZ;AAGIC,EAAAA,GAAG,EAAE,OAHT;AAIIC,EAAAA,GAAG,EAAE;AAJT,CAPU,EAaV;AACIH,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,MAAM,EAAE,OAFZ;AAGIC,EAAAA,GAAG,EAAE,OAHT;AAIIC,EAAAA,GAAG,EAAE;AAJT,CAbU,EAmBV;AACIH,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,MAAM,EAAE,SAFZ;AAGIC,EAAAA,GAAG,EAAE,OAHT;AAIIC,EAAAA,GAAG,EAAE;AAJT,CAnBU,EAyBV;AACIH,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,MAAM,EAAE,UAFZ;AAGIC,EAAAA,GAAG,EAAE,MAHT;AAIIC,EAAAA,GAAG,EAAE;AAJT,CAzBU,CAAd;;AAiCA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,aAAa,EAAEP;AAAhB,CAAT,EAAiCQ,MAAjC,KAA4C;AAC/D,QAAMD,aAAa,GAAGD,KAAK,CAACC,aAA5B;AACA,QAAME,QAAQ,GAAG,CAAC,GAAGF,aAAJ,CAAjB;;AACA,UAAQC,MAAM,CAACE,IAAf;AACI,SAAK,eAAL;AACI,YAAMC,cAAc,GAAGH,MAAM,CAACI,OAAP,CAAeC,UAAtC;AACA,YAAMC,KAAK,GAAGL,QAAQ,CAACM,SAAT,CAAmBC,EAAE,IAAIA,EAAE,CAACf,EAAH,KAAUU,cAAc,CAACV,EAAlD,CAAd;AACAQ,MAAAA,QAAQ,CAACK,KAAD,CAAR,GAAkBH,cAAlB;AACA,aAAO;AACHJ,QAAAA,aAAa,EAAEE;AADZ,OAAP;;AAGJ,SAAK,YAAL;AACI,YAAMI,UAAU,GAAGL,MAAM,CAACI,OAAP,CAAeC,UAAlC;AACAA,MAAAA,UAAU,CAACZ,EAAX,GAAgBQ,QAAQ,CAACQ,MAAT,GAAkB,CAAlC;AACAR,MAAAA,QAAQ,CAACS,IAAT,CAAcL,UAAd;AACA,aAAO;AACHN,QAAAA,aAAa,EAAEE;AADZ,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAjBR;AAmBH,CAtBD;;AAwBA,MAAMa,KAAK,GAAGrB,WAAW,CAACC,eAAe,CAAC;AAACqB,EAAAA,QAAQ,EAAEf;AAAX,CAAD,CAAhB,CAAzB;AAEA,eAAec,KAAf","sourcesContent":["import {createStore, combineReducers} from \"redux\";\r\nconst liste = [\r\n    {\r\n        id: 1,\r\n        prenom: \"John\",\r\n        nom: \"Doe\",\r\n        age: 47,\r\n    },\r\n    {\r\n        id: 2,\r\n        prenom: \"Bob\",\r\n        nom: \"Boyar\",\r\n        age: 56,\r\n    },\r\n    {\r\n        id: 3,\r\n        prenom: \"Alice\",\r\n        nom: \"Doyen\",\r\n        age: 45,\r\n    },\r\n    {\r\n        id: 4,\r\n        prenom: \"Charlie\",\r\n        nom: \"Tango\",\r\n        age: 48\r\n    },\r\n    {\r\n        id: 5,\r\n        prenom: \"Danielle\",\r\n        nom: \"Eden\",\r\n        age: 49\r\n    }\r\n];\r\n\r\nconst employeReducer = (state = {listeEmployes: liste}, action) => {\r\n    const listeEmployes = state.listeEmployes;\r\n    const newArray = [...listeEmployes];\r\n    switch (action.type) {\r\n        case \"updateEmploye\":\r\n            const updatedEmploye = action.payload.newEmploye;\r\n            const index = newArray.findIndex(em => em.id === updatedEmploye.id);\r\n            newArray[index] = updatedEmploye;\r\n            return {\r\n                listeEmployes: newArray\r\n            }\r\n        case \"addEmploye\":\r\n            const newEmploye = action.payload.newEmploye;\r\n            newEmploye.id = newArray.length + 1;\r\n            newArray.push(newEmploye);\r\n            return {\r\n                listeEmployes: newArray\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst store = createStore(combineReducers({employes: employeReducer}));\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}