{"ast":null,"code":"const api = require('./API');\n\nconst login = async (adresseMail, password) => {\n  if (adresseMail !== undefined && password !== undefined) {\n    return await api.login(adresseMail, password);\n  } else throw new Error(\"Identfiants manquants\");\n};\n\nconst getAllGarage = async () => {\n  return await api.getAllGarage();\n};\n\nconst deleteGarage = async idGarage => {\n  if (idGarage !== undefined) {\n    return await api.deleteGarage(idGarage);\n  } else {\n    throw new Error(\"Identifiant du garage incorrect\");\n  }\n};\n\nconst postGarage = async garage => {\n  console.log(garage);\n\n  if (garage !== undefined) {\n    return await api.postGarage(garage.name, garage.address, garage.phoneNumber, garage.image);\n  } else {\n    throw new Error(\"Erreur composant le garage manquant\");\n  }\n};\n\nconst updateGarage = async (id, nom, adresse, numTel) => {\n  console.log(id + nom + adresse + numTel);\n\n  if (id !== undefined && nom !== undefined && adresse !== undefined && numTel !== undefined) {\n    return await api.updateGarage(id, nom, adresse, numTel);\n  }\n\n  {\n    throw new Error(\"Les informations à envoyer à l'pi ne sont pas bonnes\");\n  }\n};\n\nconst getAllMecanicien = async () => {\n  return await api.getAllMecanicien();\n};\n\nconst deleteMecanicien = async idMecano => {\n  if (idMecano !== undefined) {\n    return await api.deleteGarage(idMecano);\n  } else {\n    throw new Error(\"Identifiant du mécanicien incorrect\");\n  }\n};\n\nconst updateMecanicien = async (id, nom, prenom, password) => {\n  if (id !== undefined && nom !== undefined && prenom !== undefined && password !== undefined) {\n    return await api.updateMecanicien(id, nom, prenom, password);\n  }\n\n  {\n    throw new Error(\"Les informations à envoyer à l'pi ne sont pas bonnes\");\n  }\n};\n\nconst postMecano = async mecano => {\n  if (mecano !== undefined) {\n    return await api.postMecanicien(mecano.nom, mecano.prenom, mecano.password, mecano.adresseMail, mecano.garage_fk);\n  } else {\n    throw new Error(\"Erreur composant le garage manquant\");\n  }\n};\n\nconst postDispo = async dispo => {\n  if (dispo !== undefined) {\n    return await api.postDispo(dispo.date, dispo.isBooked, dispo.idMecano, dispo.idReparation);\n  } else {\n    throw new Error(\"Erreur composant le garage manquant\");\n  }\n};\n\nconst getAllDispo = async () => {\n  return await api.getAllDispo();\n};\n\nconst upDateDispo = async (id, date, isbooked, idMecanicien, idReparation) => {\n  if (id !== undefined && date !== undefined && isbooked !== undefined && idMecanicien !== undefined && idReparation !== undefined) {\n    return await api.updateDispo(id, date, isbooked, idMecanicien, idReparation);\n  } else {\n    throw new Error(\"Erreur lors de l'ajout du composant\");\n  }\n};\n\nconst deleteDispo = async (id, idMecano) => {\n  if (id !== undefined && idMecano !== undefined) {\n    return await api.deleteDispo(id, idMecano);\n  } else {\n    throw new Error(\"Erreur lors de l'effacement du composant\");\n  }\n};\n\nexport { login, getAllGarage, deleteGarage, postGarage, updateGarage, getAllMecanicien, deleteMecanicien, updateMecanicien, postMecano, postDispo, getAllDispo, upDateDispo, deleteDispo };","map":{"version":3,"sources":["C:/Users/Alexandre/IdeaProjects/client_web_avence/src/component/API/index.js"],"names":["api","require","login","adresseMail","password","undefined","Error","getAllGarage","deleteGarage","idGarage","postGarage","garage","console","log","name","address","phoneNumber","image","updateGarage","id","nom","adresse","numTel","getAllMecanicien","deleteMecanicien","idMecano","updateMecanicien","prenom","postMecano","mecano","postMecanicien","garage_fk","postDispo","dispo","date","isBooked","idReparation","getAllDispo","upDateDispo","isbooked","idMecanicien","updateDispo","deleteDispo"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEA,MAAMC,KAAK,GAAG,OAAMC,WAAN,EAAkBC,QAAlB,KAA6B;AACvC,MAAGD,WAAW,KAAGE,SAAd,IAA2BD,QAAQ,KAAGC,SAAzC,EAAmD;AAC/C,WAAO,MAAML,GAAG,CAACE,KAAJ,CAAUC,WAAV,EAAsBC,QAAtB,CAAb;AACH,GAFD,MAGI,MAAM,IAAIE,KAAJ,CAAU,uBAAV,CAAN;AACP,CALD;;AAMA,MAAMC,YAAY,GAAG,YAAU;AAC3B,SAAO,MAAMP,GAAG,CAACO,YAAJ,EAAb;AACH,CAFD;;AAGA,MAAMC,YAAY,GAAG,MAAOC,QAAP,IAAkB;AACnC,MAAGA,QAAQ,KAAGJ,SAAd,EAAwB;AACpB,WAAO,MAAML,GAAG,CAACQ,YAAJ,CAAiBC,QAAjB,CAAb;AACH,GAFD,MAEK;AACD,UAAM,IAAIH,KAAJ,CAAU,iCAAV,CAAN;AACH;AACJ,CAND;;AAOA,MAAMI,UAAU,GAAG,MAAMC,MAAN,IAAe;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,MAAGA,MAAM,KAAKN,SAAd,EAAwB;AACpB,WAAO,MAAML,GAAG,CAACU,UAAJ,CAAeC,MAAM,CAACG,IAAtB,EAA2BH,MAAM,CAACI,OAAlC,EAA0CJ,MAAM,CAACK,WAAjD,EAA6DL,MAAM,CAACM,KAApE,CAAb;AACH,GAFD,MAEK;AACD,UAAM,IAAIX,KAAJ,CAAU,qCAAV,CAAN;AACH;AACJ,CAPD;;AAQA,MAAMY,YAAY,GAAG,OAAMC,EAAN,EAASC,GAAT,EAAaC,OAAb,EAAqBC,MAArB,KAA8B;AAC/CV,EAAAA,OAAO,CAACC,GAAR,CAAYM,EAAE,GAACC,GAAH,GAAOC,OAAP,GAAeC,MAA3B;;AACA,MAAGH,EAAE,KAAGd,SAAL,IAAkBe,GAAG,KAAKf,SAA1B,IAAuCgB,OAAO,KAAKhB,SAAnD,IAAgEiB,MAAM,KAAIjB,SAA7E,EAAuF;AACnF,WAAO,MAAML,GAAG,CAACkB,YAAJ,CAAiBC,EAAjB,EAAoBC,GAApB,EAAwBC,OAAxB,EAAgCC,MAAhC,CAAb;AACH;;AACD;AACI,UAAM,IAAIhB,KAAJ,CAAU,sDAAV,CAAN;AACH;AACJ,CARD;;AASA,MAAMiB,gBAAgB,GAAG,YAAS;AAC9B,SAAO,MAAMvB,GAAG,CAACuB,gBAAJ,EAAb;AACH,CAFD;;AAGA,MAAMC,gBAAgB,GAAG,MAAOC,QAAP,IAAkB;AACvC,MAAGA,QAAQ,KAAGpB,SAAd,EAAwB;AACpB,WAAO,MAAML,GAAG,CAACQ,YAAJ,CAAiBiB,QAAjB,CAAb;AACH,GAFD,MAEK;AACD,UAAM,IAAInB,KAAJ,CAAU,qCAAV,CAAN;AACH;AACJ,CAND;;AAOA,MAAMoB,gBAAgB,GAAG,OAAMP,EAAN,EAASC,GAAT,EAAaO,MAAb,EAAoBvB,QAApB,KAA+B;AACpD,MAAGe,EAAE,KAAGd,SAAL,IAAkBe,GAAG,KAAKf,SAA1B,IAAuCsB,MAAM,KAAKtB,SAAlD,IAA+DD,QAAQ,KAAIC,SAA9E,EAAwF;AACpF,WAAO,MAAML,GAAG,CAAC0B,gBAAJ,CAAqBP,EAArB,EAAwBC,GAAxB,EAA4BO,MAA5B,EAAmCvB,QAAnC,CAAb;AACH;;AAAA;AACG,UAAM,IAAIE,KAAJ,CAAU,sDAAV,CAAN;AACH;AACJ,CAND;;AAOA,MAAMsB,UAAU,GAAG,MAAMC,MAAN,IAAe;AAC9B,MAAGA,MAAM,KAAKxB,SAAd,EAAwB;AACpB,WAAO,MAAML,GAAG,CAAC8B,cAAJ,CAAmBD,MAAM,CAACT,GAA1B,EAA8BS,MAAM,CAACF,MAArC,EAA4CE,MAAM,CAACzB,QAAnD,EAA4DyB,MAAM,CAAC1B,WAAnE,EAA+E0B,MAAM,CAACE,SAAtF,CAAb;AACH,GAFD,MAEK;AACD,UAAM,IAAIzB,KAAJ,CAAU,qCAAV,CAAN;AACH;AACJ,CAND;;AAOA,MAAM0B,SAAS,GAAG,MAAMC,KAAN,IAAc;AAC5B,MAAGA,KAAK,KAAK5B,SAAb,EAAuB;AACnB,WAAO,MAAML,GAAG,CAACgC,SAAJ,CAAcC,KAAK,CAACC,IAApB,EAAyBD,KAAK,CAACE,QAA/B,EAAwCF,KAAK,CAACR,QAA9C,EAAuDQ,KAAK,CAACG,YAA7D,CAAb;AACH,GAFD,MAEK;AACD,UAAM,IAAI9B,KAAJ,CAAU,qCAAV,CAAN;AACH;AACJ,CAND;;AAOA,MAAM+B,WAAW,GAAG,YAAS;AACzB,SAAO,MAAMrC,GAAG,CAACqC,WAAJ,EAAb;AACH,CAFD;;AAGA,MAAMC,WAAW,GAAG,OAAMnB,EAAN,EAASe,IAAT,EAAcK,QAAd,EAAuBC,YAAvB,EAAoCJ,YAApC,KAAmD;AACnE,MAAGjB,EAAE,KAAId,SAAN,IAAmB6B,IAAI,KAAI7B,SAA3B,IAAwCkC,QAAQ,KAAKlC,SAArD,IAAkEmC,YAAY,KAAKnC,SAAnF,IAAgG+B,YAAY,KAAK/B,SAApH,EAA8H;AAC1H,WAAO,MAAML,GAAG,CAACyC,WAAJ,CAAgBtB,EAAhB,EAAmBe,IAAnB,EAAwBK,QAAxB,EAAiCC,YAAjC,EAA8CJ,YAA9C,CAAb;AACH,GAFD,MAEK;AACD,UAAM,IAAI9B,KAAJ,CAAU,qCAAV,CAAN;AACH;AAEJ,CAPD;;AAQA,MAAMoC,WAAW,GAAG,OAAMvB,EAAN,EAASM,QAAT,KAAoB;AACpC,MAAGN,EAAE,KAAId,SAAN,IAAmBoB,QAAQ,KAAIpB,SAAlC,EAA4C;AACxC,WAAO,MAAML,GAAG,CAAC0C,WAAJ,CAAgBvB,EAAhB,EAAmBM,QAAnB,CAAb;AACH,GAFD,MAEK;AACD,UAAM,IAAInB,KAAJ,CAAU,0CAAV,CAAN;AACH;AACJ,CAND;;AAOA,SACIJ,KADJ,EAEIK,YAFJ,EAGIC,YAHJ,EAIIE,UAJJ,EAKIQ,YALJ,EAMIK,gBANJ,EAOIC,gBAPJ,EAQIE,gBARJ,EASIE,UATJ,EAUII,SAVJ,EAWIK,WAXJ,EAYIC,WAZJ,EAaII,WAbJ","sourcesContent":["const api = require('./API');\r\n\r\nconst login = async(adresseMail,password)=>{\r\n    if(adresseMail!==undefined && password!==undefined){\r\n        return await api.login(adresseMail,password);\r\n    }else\r\n        throw new Error(\"Identfiants manquants\");\r\n}\r\nconst getAllGarage = async ()=>{\r\n    return await api.getAllGarage();\r\n}\r\nconst deleteGarage = async (idGarage)=>{\r\n    if(idGarage!==undefined){\r\n        return await api.deleteGarage(idGarage);\r\n    }else{\r\n        throw new Error(\"Identifiant du garage incorrect\");\r\n    }\r\n}\r\nconst postGarage = async(garage)=>{\r\n    console.log(garage);\r\n    if(garage !== undefined){\r\n        return await api.postGarage(garage.name,garage.address,garage.phoneNumber,garage.image);\r\n    }else{\r\n        throw new Error(\"Erreur composant le garage manquant\");\r\n    }\r\n}\r\nconst updateGarage = async(id,nom,adresse,numTel)=>{\r\n    console.log(id+nom+adresse+numTel);\r\n    if(id!==undefined && nom !== undefined && adresse !== undefined && numTel!== undefined){\r\n        return await api.updateGarage(id,nom,adresse,numTel);\r\n    }\r\n    {\r\n        throw new Error(\"Les informations à envoyer à l'pi ne sont pas bonnes\");\r\n    }\r\n}\r\nconst getAllMecanicien = async()=>{\r\n    return await api.getAllMecanicien();\r\n}\r\nconst deleteMecanicien = async (idMecano)=>{\r\n    if(idMecano!==undefined){\r\n        return await api.deleteGarage(idMecano);\r\n    }else{\r\n        throw new Error(\"Identifiant du mécanicien incorrect\");\r\n    }\r\n}\r\nconst updateMecanicien = async(id,nom,prenom,password)=>{\r\n    if(id!==undefined && nom !== undefined && prenom !== undefined && password!== undefined){\r\n        return await api.updateMecanicien(id,nom,prenom,password);\r\n    }{\r\n        throw new Error(\"Les informations à envoyer à l'pi ne sont pas bonnes\");\r\n    }\r\n}\r\nconst postMecano = async(mecano)=>{\r\n    if(mecano !== undefined){\r\n        return await api.postMecanicien(mecano.nom,mecano.prenom,mecano.password,mecano.adresseMail,mecano.garage_fk);\r\n    }else{\r\n        throw new Error(\"Erreur composant le garage manquant\");\r\n    }\r\n}\r\nconst postDispo = async(dispo)=>{\r\n    if(dispo !== undefined){\r\n        return await api.postDispo(dispo.date,dispo.isBooked,dispo.idMecano,dispo.idReparation);\r\n    }else{\r\n        throw new Error(\"Erreur composant le garage manquant\");\r\n    }\r\n}\r\nconst getAllDispo = async()=>{\r\n    return await api.getAllDispo();\r\n}\r\nconst upDateDispo = async(id,date,isbooked,idMecanicien,idReparation)=>{\r\n    if(id!== undefined && date!== undefined && isbooked !== undefined && idMecanicien !== undefined && idReparation !== undefined){\r\n        return await api.updateDispo(id,date,isbooked,idMecanicien,idReparation);\r\n    }else{\r\n        throw new Error(\"Erreur lors de l'ajout du composant\");\r\n    }\r\n\r\n}\r\nconst deleteDispo = async(id,idMecano)=>{\r\n    if(id!== undefined && idMecano!== undefined){\r\n        return await api.deleteDispo(id,idMecano);\r\n    }else{\r\n        throw new Error(\"Erreur lors de l'effacement du composant\");\r\n    }\r\n}\r\nexport {\r\n    login,\r\n    getAllGarage,\r\n    deleteGarage,\r\n    postGarage,\r\n    updateGarage,\r\n    getAllMecanicien,\r\n    deleteMecanicien,\r\n    updateMecanicien,\r\n    postMecano,\r\n    postDispo,\r\n    getAllDispo,\r\n    upDateDispo,\r\n    deleteDispo\r\n}"]},"metadata":{},"sourceType":"module"}