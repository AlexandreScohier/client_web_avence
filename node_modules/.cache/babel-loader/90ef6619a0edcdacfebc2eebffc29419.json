{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexandre\\\\IdeaProjects\\\\client_web_avence\\\\src\\\\routes\\\\Routes.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Login from \"../component/Connection\";\n\nclass Routes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: undefined\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.user === undefined) {\n      this.setState({\n        user: this.props.userStore\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, \"Logine\")), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStore: state.login.userStore\n  };\n};\n\nexport default connect(mapStateToProps)(Routes);","map":{"version":3,"sources":["C:/Users/Alexandre/IdeaProjects/client_web_avence/src/routes/Routes.js"],"names":["React","BrowserRouter","Router","Switch","Route","Redirect","Link","connect","Login","Routes","Component","constructor","props","state","user","undefined","componentDidUpdate","prevProps","prevState","snapshot","setState","userStore","render","mapStateToProps","login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,QAJJ,EAIcC,IAJd,QAKO,kBALP;AAMA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AACA,MAAMC,MAAN,SAAqBT,KAAK,CAACU,SAA3B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAGC;AADE,KAAb;AAGH;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAG,KAAKN,KAAL,CAAWC,IAAX,KAAoBC,SAAvB,EAAiC;AAC7B,WAAKK,QAAL,CAAc;AAACN,QAAAA,IAAI,EAAC,KAAKF,KAAL,CAAWS;AAAjB,OAAd;AACH;AACJ;;AAGDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,eAIA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEd,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,CAJA,CADJ,CADJ;AAgCH;;AA/C+B;;AAiDpC,MAAMe,eAAe,GAAIV,KAAD,IAAW;AAC/B,SAAO;AACHQ,IAAAA,SAAS,EAAER,KAAK,CAACW,KAAN,CAAYH;AADpB,GAAP;AAGH,CAJD;;AAKA,eAAed,OAAO,CAACgB,eAAD,CAAP,CAAyBd,MAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect, Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Login from \"../component/Connection\";\r\nclass Routes extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user : undefined\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.state.user === undefined){\r\n            this.setState({user:this.props.userStore});\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <nav>\r\n                        <Link to=\"/login\">Logine</Link>\r\n                    </nav>\r\n                <Switch>\r\n                        <Route path=\"/login\" component={Login}/>\r\n\r\n                        {/* <Route path=\"/menu\" render={()=>{\r\n                            return this.state.user === undefined ? <Redirect to=\"/login\"/>:\r\n                                (this.state.user.userType === \"mecano\")? <Menu/> : <Redirect to={\"/\"}/>\r\n                        }}/>\r\n\r\n                        <Route path=\"/garages\" render={()=>{\r\n                        return this.state.user === undefined? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\")?<Tableau getAllElements = {getAllGarage} deleteElement = {deleteGarage} updateGarage = {updateGarage} postGarage = {postGarage}/> : <Redirect to={'/login'}/>\r\n                        }}/>\r\n\r\n                        <Route path=\"/mecano\" render={()=>{\r\n                            return this.state.user === undefined? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\")?<Tableau getAllElements = {getAllMecanicien} deleteElement = {deleteMecanicien} updateGarage = {updateMecanicien} postGarage = {postMecano}/> : <Redirect to={'/login'}/>\r\n                        }}/>\r\n                        <Route path=\"/dispos\" render={()=>{\r\n                            return this.state.user === undefined? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\")?<Tableau getAllElements = {getAllDispo} deleteElement = {deleteDispo} updateGarage = {upDateDispo} postGarage = {postDispo}/> : <Redirect to={'/login'}/>\r\n\r\n                        }}/> */}\r\n\r\n\r\n\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userStore: state.login.userStore,\r\n    }\r\n};\r\nexport default connect(mapStateToProps)(Routes);"]},"metadata":{},"sourceType":"module"}