{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\Desktop\\\\d\\xE9veloppement de client avanc\\xE9\\\\Correction\\\\react-component\\\\src\\\\component\\\\Connection.js\";\nimport React, { useState } from \"react\";\nimport \"../style/connectionStyle.css\";\nimport { login } from \"./API\";\nimport { Button, TextField, Grid, Paper, Typography } from \"@material-ui/core\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Connection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      loaded: false,\n      loading: false,\n      errorMassage: false,\n      connected: false\n    };\n  }\n\n  dissmisError() {\n    this.setState({\n      error: \"\"\n    });\n  }\n\n  async handleSubmit() {\n    this.setState({\n      error: false,\n      errorMessage: \"\",\n      loading: true,\n      loaded: false\n    });\n\n    try {\n      const data = await login(this.state.email, this.state.password);\n      console.log(data);\n      if (data.user.userType !== \"mecano\") throw new Error(\"Un client ne peut pas se connecter à l'application!\");\n      this.props.login(data);\n      this.setState({\n        connected: true\n      });\n    } catch (error) {\n      this.setState({\n        error: true,\n        loading: false,\n        loaded: true,\n        errorMessage: error\n      });\n    }\n  }\n\n  userChange(evt) {\n    this.setState({\n      email: evt.target.value\n    });\n  }\n\n  passwordChange(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n\n  render() {\n    if (this.state.connected) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }\n      });\n    }\n\n    let contentMessage;\n    if (!this.state.loaded) contentMessage = null;else if (this.state.loading) {\n      contentMessage = /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        component: \"h6\",\n        color: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 45\n        }\n      }, \"Chargement en cours\"), \" \");\n    } else if (this.state.error) {\n      contentMessage = /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        component: \"h6\",\n        color: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 45\n        }\n      }, this.state.errorMassage), \" \");\n    }\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      justify: \"center\",\n      direction: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"center\",\n      spacing: 2,\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, \"Se connecter\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      label: \"Adresse mail\",\n      value: this.state.email,\n      onChange: event => this.userChange(event),\n      required: true,\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"password\",\n      label: \"Mot de passe\",\n      value: this.state.password,\n      onChange: event => this.passwordChange(event),\n      onKeyPress: event => {\n        if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n          this.dissmisError();\n          this.handleSubmit().then();\n        }\n      },\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 41\n      }\n    })), contentMessage && contentMessage, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      className: \"button-block\",\n      onClick: () => {\n        this.dissmisError();\n        this.handleSubmit();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }\n    }, \"Connexion\")))))));\n  }\n\n}\n\nexport default Connection;","map":{"version":3,"sources":["C:/Users/matth/Desktop/développement de client avancé/Correction/react-component/src/component/Connection.js"],"names":["React","useState","login","Button","TextField","Grid","Paper","Typography","Redirect","Connection","Component","constructor","props","state","email","password","loaded","loading","errorMassage","connected","dissmisError","setState","error","handleSubmit","errorMessage","data","console","log","user","userType","Error","userChange","evt","target","value","passwordChange","render","contentMessage","event","code","then"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport \"../style/connectionStyle.css\";\r\nimport {login} from \"./API\";\r\nimport {\r\n    Button,\r\n    TextField,\r\n    Grid,\r\n    Paper,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nclass Connection extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password:'',\r\n            loaded:false,\r\n            loading:false,\r\n        errorMassage:false,\r\n        connected:false};\r\n\r\n    }\r\n    dissmisError(){\r\n        this.setState({error:\"\"});\r\n    }\r\n    async handleSubmit(){\r\n        this.setState({error:false,\r\n        errorMessage:\"\",\r\n        loading:true,\r\n        loaded:false});\r\n\r\n        try{\r\n            const data = await login(this.state.email,this.state.password);\r\n            console.log(data);\r\n            if(data.user.userType !== \"mecano\")\r\n                throw new Error(\"Un client ne peut pas se connecter à l'application!\");\r\n            this.props.login(data);\r\n            this.setState({connected:true});\r\n        }catch (error) {\r\n            this.setState({\r\n                error : true,\r\n                loading:false,\r\n                loaded:true,\r\n                errorMessage:error\r\n            });\r\n        }\r\n    }\r\n    userChange(evt){\r\n        this.setState({email:evt.target.value});\r\n    }\r\n    passwordChange(evt){\r\n        this.setState({password:evt.target.value});\r\n    }\r\n\r\n\r\n    render() {\r\n            if(this.state.connected){\r\n                return <Redirect to={\"/menu\"}/>\r\n            }\r\n            let contentMessage;\r\n            if(!this.state.loaded)\r\n                contentMessage = null;\r\n            else if(this.state.loading){\r\n                contentMessage = <Grid item><Typography component={\"h6\"} color={\"error\"}>Chargement en cours</Typography> </Grid>;\r\n            }else if(this.state.error){\r\n                contentMessage = <Grid item><Typography component={\"h6\"} color={\"error\"}>{this.state.errorMassage}</Typography> </Grid>\r\n            }\r\n            return (\r\n                <Grid container spacing={0} justify={\"center\"} direction={\"row\"}>\r\n                    <Grid item>\r\n                        <Grid\r\n                            container\r\n                        direction={\"column\"}\r\n                        justify={\"center\"}\r\n                        spacing={2}\r\n                        className={\"login-form\"}>\r\n                            <Grid item>\r\n                                <Typography component={\"h1\"} variant={\"h5\"}>Se connecter</Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container direction={\"column\"} spacing={2}>\r\n                                    <Grid item>\r\n                                        <TextField\r\n                                        type={\"text\"}\r\n                                        label={\"Adresse mail\"}\r\n                                        value={this.state.email}\r\n                                        onChange={(event)=>this.userChange(event)} required={true} autoFocus\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TextField\r\n                                        type={\"password\"}\r\n                                        label={\"Mot de passe\"}\r\n                                        value={this.state.password}\r\n                                        onChange={(event)=>this.passwordChange(event)}\r\n                                        onKeyPress={(event)=>{\r\n                                            if(event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                                                this.dissmisError();\r\n                                                this.handleSubmit().then();\r\n                                            }\r\n                                        }}\r\n                                        required\r\n                                        />\r\n                                    </Grid>\r\n                                    {contentMessage && contentMessage}\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            variant={\"contained\"}\r\n                                            type={\"submit\"}\r\n                                            className={\"button-block\"}\r\n                                            onClick={()=>{\r\n                                                this.dissmisError();\r\n                                                this.handleSubmit();\r\n                                            }}>\r\n                                            Connexion\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n\r\n\r\n    }\r\n}\r\nexport default Connection;"]},"metadata":{},"sourceType":"module"}