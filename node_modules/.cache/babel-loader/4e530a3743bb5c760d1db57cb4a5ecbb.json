{"ast":null,"code":"// import React from \"react\";\n// import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//     Redirect\n// } from \"react-router-dom\";\n// import {connect} from \"react-redux\";\n// import Login from \"../component/Connection\";\n// import Menu from \"../component/Menu\";\n// import Tableau from \"../component/Garage/GarageTable\"\n// import MechanicTableSelected from \"../component/Garage/MechanicTableSelected\"\n// import {getAllGarage,deleteGarage,updateGarage,postGarage,getAllMecanicien,updateMecanicien,deleteMecanicien,postMecano,upDateDispo,deleteDispo,getAllDispo,postDispo} from \"../component/API\";\n// class Routes extends React.Component{\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             user : undefined\n//         }\n//     }\n//     componentDidUpdate(prevProps, prevState, snapshot) {\n//         if(this.state.user === undefined){\n//             this.setState({user:this.props.userStore});\n//         }\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <Router>\n//                     <Switch>\n//                         <Route path=\"/login\" component={Login}/>\n//                         <Route path=\"/menu\" render={()=>{\n//                             return this.state.user === undefined ? <Redirect to=\"/login\"/>:\n//                                 (this.state.user.userType === \"mecano\")? <Menu/> : <Redirect to={\"/\"}/>\n//                         }}/>\n//                         <Route path=\"/garages\" render={()=>{\n//                         return this.state.user === undefined? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\")?<Tableau getAllElements = {getAllGarage} deleteElement = {deleteGarage} updateGarage = {updateGarage} postGarage = {postGarage}/> : <Redirect to={'/login'}/>\n//                         }}/>\n//                         <Route path=\"/mecano\" render={()=>{\n//                             return this.state.user === undefined? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\")?<Tableau getAllElements = {getAllMecanicien} deleteElement = {deleteMecanicien} updateGarage = {updateMecanicien} postGarage = {postMecano}/> : <Redirect to={'/login'}/>\n//                         }}/>\n//                         <Route path=\"/dispos\" render={()=>{\n//                             return this.state.user === undefined? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\")?<Tableau getAllElements = {getAllDispo} deleteElement = {deleteDispo} updateGarage = {upDateDispo} postGarage = {postDispo}/> : <Redirect to={'/login'}/>\n//                         }}/>\n//                     </Switch>\n//                 </Router>\n//             </div>\n//         );\n//     }\n// }\n// const mapStateToProps = (state) => {\n//     return {\n//         userStore: state.login.userStore,\n//     }\n// };\n// export default connect(mapStateToProps)(Routes);","map":{"version":3,"sources":["C:/Users/Alexandre/IdeaProjects/client_web_avence/src/routes/Routes.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from \"react\";\r\n// import {\r\n//     BrowserRouter as Router,\r\n//     Switch,\r\n//     Route,\r\n//     Redirect\r\n// } from \"react-router-dom\";\r\n// import {connect} from \"react-redux\";\r\n// import Login from \"../component/Connection\";\r\n// import Menu from \"../component/Menu\";\r\n// import Tableau from \"../component/Garage/GarageTable\"\r\n// import MechanicTableSelected from \"../component/Garage/MechanicTableSelected\"\r\n// import {getAllGarage,deleteGarage,updateGarage,postGarage,getAllMecanicien,updateMecanicien,deleteMecanicien,postMecano,upDateDispo,deleteDispo,getAllDispo,postDispo} from \"../component/API\";\r\n// class Routes extends React.Component{\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             user : undefined\r\n//         }\r\n//     }\r\n//     componentDidUpdate(prevProps, prevState, snapshot) {\r\n//         if(this.state.user === undefined){\r\n//             this.setState({user:this.props.userStore});\r\n//         }\r\n//     }\r\n\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <Router>\r\n//                     <Switch>\r\n//                         <Route path=\"/login\" component={Login}/>\r\n\r\n//                         <Route path=\"/menu\" render={()=>{\r\n//                             return this.state.user === undefined ? <Redirect to=\"/login\"/>:\r\n//                                 (this.state.user.userType === \"mecano\")? <Menu/> : <Redirect to={\"/\"}/>\r\n//                         }}/>\r\n\r\n//                         <Route path=\"/garages\" render={()=>{\r\n//                         return this.state.user === undefined? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\")?<Tableau getAllElements = {getAllGarage} deleteElement = {deleteGarage} updateGarage = {updateGarage} postGarage = {postGarage}/> : <Redirect to={'/login'}/>\r\n//                         }}/>\r\n\r\n//                         <Route path=\"/mecano\" render={()=>{\r\n//                             return this.state.user === undefined? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\")?<Tableau getAllElements = {getAllMecanicien} deleteElement = {deleteMecanicien} updateGarage = {updateMecanicien} postGarage = {postMecano}/> : <Redirect to={'/login'}/>\r\n//                         }}/>\r\n//                         <Route path=\"/dispos\" render={()=>{\r\n//                             return this.state.user === undefined? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\")?<Tableau getAllElements = {getAllDispo} deleteElement = {deleteDispo} updateGarage = {upDateDispo} postGarage = {postDispo}/> : <Redirect to={'/login'}/>\r\n\r\n//                         }}/>\r\n\r\n\r\n\r\n//                     </Switch>\r\n//                 </Router>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         userStore: state.login.userStore,\r\n//     }\r\n// };\r\n// export default connect(mapStateToProps)(Routes);"]},"metadata":{},"sourceType":"module"}