{"version":3,"sources":["component/API/index.js","component/Connection.js","component/Menu.js","component/Garage/AddGarage.js","component/Garage/RowReadGarage.js","component/Garage/RowEditGarage.js","component/Garage/GarageTable.js","routes/Routes.js","App.js","serviceWorker.js","store/index.js","index.js","component/API/API.js"],"names":["api","require","login","adresseMail","password","a","undefined","Error","getAllGarage","deleteGarage","idGarage","postGarage","garage","console","log","name","address","phoneNumber","image","Connection","props","state","email","loaded","loading","errorMassage","connected","this","setState","error","errorMessage","data","user","userRecup","userType","evt","target","value","contentMessage","to","Grid","item","Typography","component","color","className","container","justify","direction","spacing","TextField","type","label","onChange","event","userChange","required","autoFocus","passwordChange","onKeyPress","code","dissmisError","handleSubmit","then","Button","variant","onClick","React","Component","connect","dispatch","payload","userInfo","Menu","prevProps","prevState","snapshot","Link","userStore","AddGarage","placeholder","nameChange","addressChange","phoneNumberChange","imageChange","submit","RowReadGarage","element","handleEditClick","index","renderTableHeader","map","column","height","width","src","delete","id","RowEditGarage","TableauGarage","preventDefault","idEdit","getAllElements","bind","deleteElement","titles","elements","idDelete","response","catch","tab","push","title","Routes","path","Login","render","App","Boolean","window","location","hostname","match","store","createStore","combineReducers","action","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","API_URL","header","axios","post","headers","status","reponse","get","JSON","stringify","nom","adresse","numTel","updateGarage","patch"],"mappings":"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","file":"static/js/main.e7c3d94a.chunk.js","sourcesContent":["const api = require('./API');\n\nconst login = async(adresseMail,password)=>{\n    if(adresseMail!==undefined && password!==undefined){\n        return await api.login(adresseMail,password);\n    }else\n        throw new Error(\"Identfiants manquants\");\n}\nconst getAllGarage = async ()=>{\n    return await api.getAllGarage();\n}\nconst deleteGarage = async (idGarage)=>{\n    if(idGarage!==undefined){\n        return await api.deleteGarage(idGarage);\n    }else{\n        throw new Error(\"Identifiant du garage incorrect\");\n    }\n}\nconst postGarage = async(garage)=>{\n    console.log(garage);\n    if(garage !== undefined){\n        return await api.postGarage(garage.name,garage.address,garage.phoneNumber,garage.image);\n    }else{\n        throw new Error(\"Erreur composant le garage manquant\");\n    }\n}\nconst updateGarage = async(id,nom,adresse,numTel)=>{\n    if(id!==undefined && nom !== undefined && adresse !== undefined && numTel!== undefined){\n        return await api.updateGarage(id,nom,adresse,numTel);\n    }{\n        throw new Error(\"Les informations à envoyer à l'pi ne sont pas bonnes\");\n    }\n}\nexport {\n    login,\n    getAllGarage,\n    deleteGarage,\n    postGarage,\n    updateGarage\n}","import React, {useState} from \"react\";\nimport \"../style/connectionStyle.css\";\nimport {login} from \"./API\";\nimport {\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\n\nclass Connection extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password:'',\n            loaded:false,\n            loading:false,\n        errorMassage:false,\n        connected:false};\n\n    }\n    dissmisError(){\n        this.setState({error:\"\"});\n    }\n    async handleSubmit(){\n        this.setState({error:false,\n        errorMessage:\"\",\n        loading:true,\n        loaded:false});\n        try{\n            const data = await login(this.state.email,this.state.password);\n            if(data.user.userRecup.userType !== \"mecano\") {\n                throw new Error(\"Un client ne peut pas se connecter à l'application!\");\n            }\n            this.props.login(data.user.userRecup);\n            this.setState({\n                connected:true});\n        }catch (error) {\n            this.setState({\n                error : true,\n                loading:false,\n                loaded:true,\n                errorMessage:error\n            });\n        }\n    }\n    userChange(evt){\n        this.setState({email:evt.target.value});\n    }\n    passwordChange(evt){\n        this.setState({password:evt.target.value});\n    }\n\n\n    render() {\n            if(this.state.connected){\n                return <Redirect to={\"/menu\"}/>\n            }\n            let contentMessage;\n            if(!this.state.loaded)\n                contentMessage = null;\n            else if(this.state.loading){\n                contentMessage = <Grid item><Typography component={\"h6\"} color={\"error\"}>Chargement en cours</Typography> </Grid>;\n            }else if(this.state.error){\n                contentMessage = <Grid item><Typography component={\"h6\"} color={\"error\"}>{this.state.errorMassage}</Typography> </Grid>\n            }\n            return (\n                <div className=\"gridConnection\">\n                <Grid container  justify={\"center\"} direction={\"row\"}>\n                    <Grid item>\n                        <Grid container direction={\"column\"} justify={\"center\"} className={\"login-form\"}>\n                            <Grid item>\n                                <Typography component={\"h1\"}>Se connecter</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Grid container direction={\"column\"} spacing={3}>\n                                    <Grid item>\n                                        <TextField\n                                        type={\"text\"}\n                                        label={\"Adresse mail\"}\n                                        value={this.state.email}\n                                        onChange={(event)=>this.userChange(event)} required={true} autoFocus\n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <TextField\n                                        type={\"password\"}\n                                        label={\"Mot de passe\"}\n                                        value={this.state.password}\n                                        onChange={(event)=>this.passwordChange(event)}\n                                        onKeyPress={(event)=>{\n                                            if(event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n                                                this.dissmisError();\n                                                this.handleSubmit().then();\n                                            }\n                                        }}\n                                        required\n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant={\"contained\"}\n                                            type={\"submit\"}\n                                            className={\"button-block\"}\n                                            onClick={()=>{\n                                                this.dissmisError();\n                                                this.handleSubmit();\n                                            }}>\n                                            Connexion\n                                        </Button>\n                                    </Grid>\n                                    {contentMessage && contentMessage}\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                    </Grid>\n                </Grid>\n                </div>\n            )\n\n\n    }\n}\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        login : (user)=>{\n            dispatch({type:\"login\", payload:{userInfo:user}})\n        }\n    }\n}\nexport default connect(undefined,mapDispatchToProps)(Connection);","import React, {useState} from \"react\";\nimport \"../style/menuStyle.css\";\nimport \"../style/mainStyle.css\";\nimport {\n    Button\n} from \"@material-ui/core\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nclass Menu extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            user : this.props.user\n        }\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n    }\n\n    render() {\n        return(\n            <div className=\"menu\">\n                <Button\n                    variant={\"contained\"}\n                    component={Link} to={\"/garages\"}>\n                    Modifier les garages\n                </Button>\n                <Button\n                    variant={\"contained\"}\n                    component={Link} to={\"/garages\"}>\n                    Modifier les mécaniciens\n                </Button>\n                <Button\n                    variant={\"contained\"}\n                    onClick={()=>{\n                        console.log(\"Essaie\")\n                        return <Redirect to={\"/garages\"}/>}}>\n                    Modifier les horaires\n                </Button>\n                <Button\n                    variant={\"contained\"}\n                    onClick={()=>{\n                        console.log(\"Essaie\")\n                        return <Redirect to={\"/garages\"}/>}}>\n                    Modifier les reparations\n                </Button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state)=>{\n    console.log(\"Matthys\");\n    return {\n        user : state.userStore\n    }\n}\nconst dispatchToProps = (dispatch)=>{\n    return {\n        login : (user)=>{\n            dispatch({type:\"login\", payload:{userInfo:user}})\n        }\n    }\n}\n\nexport default connect(mapStateToProps,dispatchToProps)(Menu);","import React from \"react\";\nimport {TextField} from \"@material-ui/core\";\nimport {postGarage} from \"../API/index\";\n\n\nclass AddGarage extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            address: \"\",\n            phoneNumber: \"\",\n            image: \"\"}\n    }\n    nameChange(evt){\n        this.setState({name:evt.target.value});\n    }\n    addressChange(evt){\n        this.setState({address:evt.target.value});\n    }\n    phoneNumberChange(evt){\n        this.setState({phoneNumber:evt.target.value});\n    }\n    imageChange(evt){\n        this.setState({image:evt.target.value});\n    }\n    submit(name,address,phoneNumber,image){\n\n        const data = postGarage({name:name,address:address,phoneNumber: phoneNumber,image:image});\n    }\n    render() {\n        return(\n            <div className=\"AddGarage\">\n                <h1>Ajouter un garage</h1>\n                <input\n                    type={\"text\"}\n                    name={\"Nom\"}\n                    value={this.state.name}\n                    placeholder={\"Nom\"}\n                    onChange={(event)=>this.nameChange(event)}\n                    required\n                    />\n                <input\n                    type={\"text\"}\n                    name={\"adresse\"}\n                    placeholder={\"Adresse\"}\n                    value={this.state.address}\n                    onChange={(event => this.addressChange(event))}\n                    required\n                />\n                <input\n                    type={\"text\"}\n                    name={\"Numéro de téléphone\"}\n                    placeholder={\"Numéro de téléphone\"}\n                    value={this.state.phoneNumber}\n                    onChange={event => this.phoneNumberChange(event)}\n                    required\n                />\n                <input\n                    type={\"text\"}\n                    name={\"image\"}\n                    placeholder={\"Url de l'image\"}\n                    value={this.state.image}\n                    onChange={event => this.imageChange(event)}\n                    required\n                />\n                <button type={\"submit\"} onClick={()=>this.submit(this.state.name,this.state.address,this.state.phoneNumber,this.state.image)}>Add</button>\n            </div>\n        )\n    }\n\n}\n\nexport default AddGarage;","import React from \"react\";\nimport {Button, TextField} from \"@material-ui/core\";\n\nconst RowReadGarage = ({element, handleEditClick ,index,renderTableHeader}) =>{\n    return(\n        <tr>\n            {\n                 renderTableHeader(element).map((column,index)=>{\n                    if(column !== \"image\") {\n                        return <td>{element[`${column}`]}</td>;\n                    }else{\n                        return <img height={\"60px\"} width={\"60px\"} src={element[`${column}`]}/>;\n                    }\n                })\n            }\n            <td>\n                <button type=\"button\" onClick= {(event => handleEditClick(event,index))}>\n                    edit\n                </button>\n                <button type=\"button\" onClick={()=>handleEditClick.delete(element.id)}>\n                    delete\n                </button>\n            </td>\n        </tr>\n    );\n\n}\n\nexport default RowReadGarage;","import React from \"react\";\nimport {TextField} from \"@material-ui/core\";\nimport \"../../style/tableStyle.css\"\n\nconst RowEditGarage = ({handleEditClick, element, renderTableHeader}) =>{\n    return(\n        <tr>\n            {\n                renderTableHeader(element).map((column,index)=>{\n                    return <td>\n                            <input\n                            type={\"text\"}\n                            name={element[`${column}`]}\n                            placeholder={element[`${column}`]}\n                            value={element[`${column}`]}\n                            required\n                        >{element[`${column}`]}</input>\n                        </td>;\n                })\n            }\n            <td>\n                <button type=\"button\">\n                    save\n                </button>\n                <button type=\"button\" onClick= {(event => handleEditClick(event,null))}>\n                    cancel\n                </button>\n            </td>\n        </tr>\n    );\n};\n\nexport default RowEditGarage;","import React,{Fragment, useState} from \"react\";\nimport AddGarage from \"./AddGarage\";\nimport RowReadGarage from \"./RowReadGarage\";\nimport RowEditGarage from \"./RowEditGarage\";\nimport \"../../style/tableStyle.css\";\nimport {getAllGarage} from \"../API\";\n\nclass TableauGarage extends React.Component{\n    constructor() {\n        super();\n        this.getAllElements = this.getAllGarage.bind(this);\n        this.deleteElement= this.deleteGarage.bind(this);\n        this.state = {\n            titles : [],\n            elements: [],\n            idEdit: null,\n            idDelete: null,\n        }\n\n    }\n    componentDidMount() {\n        this.getAllElements().then(response=>this.setState({elements:response})).catch(error=>console.error(error));\n    }\n\n    handleEditClick = (event, index) => {\n        event.preventDefault();\n        this.setState({idEdit : index});\n    }\n\n    renderTableHeader(tab) {\n        let titles = [];\n        console.log(tab);\n        for (let name in tab) {\n            if (name !== \"id\") {\n                titles.push(name);\n            }\n        }\n        return titles;\n    }\n    render() {\n        return (\n            <div>\n                <form>\n                <table>\n                    <thead>\n                        <tr>\n                            {\n                                this.renderTableHeader(this.state.elements[0]).map((title,index)=>{\n                                        return <th>{title}</th>;\n\n                                })\n                            }\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.state.elements.map((element,index)=>(\n                            <Fragment>\n                                { this.state.idEdit === index ? (\n                                    <RowEditGarage handleEditClick = {this.handleEditClick} element={element} renderTableHeader={this.renderTableHeader}/>\n                                ) : (\n                                    <RowReadGarage element={element} handleEditClick = {this.handleEditClick = {delete : this.deleteGarage}} index={index} renderTableHeader={this.renderTableHeader}/>\n                                )}\n                            </Fragment>\n                            ))}\n                    </tbody>\n                </table>\n                </form>\n                <AddGarage/>\n            </div>\n\n        )\n    }\n}\nexport default TableauGarage;","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport Login from \"../component/Connection\";\nimport Menu from \"../component/Menu\";\nimport Tableau from \"../component/Garage/GarageTable\"\nimport {getAllGarage,deleteGarage} from \"../component/API\";\nclass Routes extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            user : undefined\n        }\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.state.user === undefined){\n            this.setState({user:this.props.userStore});\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Router>\n                    <Switch>\n                        <Route path=\"/login\" component={Login}/>\n                        <Route path=\"/menu\" render={()=>{\n                            return this.state.user === undefined ? <Redirect to=\"/login\"/>:\n                                (this.state.user.userType === \"mecano\")? <Menu/> : <Redirect to={\"/\"}/>\n                        }\n\n                        }/>\n                        <Route path=\"/garages\" render={()=>{\n                        return this.state.user === undefined? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\")?<Tableau getAllElements = {getAllGarage} deleteElement = {deleteGarage}/> : <Redirect to={'/login'}/>\n                        }\n                        }/>\n\n                        <Route path={\"/\"} render={()=>{\n                           return this.state.user === undefined ? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\") ? <Menu/> :  <Redirect to={\"/login\"}/>\n                        }\n                        }\n                        />\n\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    console.log(state.login.userStore);\n    return {\n        userStore: state.login.userStore,\n    }\n};\nexport default connect(mapStateToProps)(Routes);","import React from 'react';\nimport './App.css';\nimport Routes from \"./routes/Routes\";\nimport TableauGarage from \"./component/Garage/GarageTable\";\nfunction App() {\n  return (\n    <div className=\"App\" >\n        <TableauGarage/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from \"redux\";\n\nconst userReducer = (state = {user : {}}, action) => {\n\n    switch (action.type) {\n        case \"login\" :\n            return {userStore : action.payload.userInfo};\n        default :\n            return state;\n    }\n}\n\n\nconst store = createStore(combineReducers({ login: userReducer}));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}><App/></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from \"axios\";\n\nconst API_URL = \"http://localhost:3001/\";\nlet header = {'Access-Control-Allow-Origin' : \"*\"}\nconst login = async(adresseMail,password)=>{\n\n    const reponse = await axios.post(API_URL+\"user/admin\",{\n        adresseMail,\n        password\n    },{\n        headers : header\n    }).catch(error=>{\n\n        if(error.response.status === 400){\n            throw new Error(\"Les identifiants n'existent pas dans la base de données\");\n        }else if(error.response.status === 404){\n            throw new Error(\"Utilisateur inconnu pour cet administrateur\");\n        }else if(error.response.status === 500){\n            throw new Error(\"Erreur de connexion\");\n        }\n\n    });\n    header = {\n        'Authorization': 'Bearer ' + reponse.data,\n        'Accept-version' : \"1.0.0\",\n        'Access-Control-Allow-Origin' : \"*\"\n    }\n    console.log(reponse.data);\n\n\n    return reponse.data;\n\n\n}\nconst getAllGarage = async ()=>{\n    const reponse = await axios.get(API_URL+\"garage/\",{\n    headers : header\n    }).catch(error=>{\n        if(error.response.status === 404)\n            throw new Error(\"Garage inconnu\");\n        else if(error.response.status === 500)\n            throw new Error(\"Erreur de connexion\");\n    });\n    console.log(JSON.stringify(reponse.data));\n    return reponse.data;\n}\nconst deleteGarage = async(idGarage)=>{\n    const reponse = await axios.delete(API_URL+\"garage/\",{\n        headers:header,\n        data:{\n            id : idGarage\n        }\n    }).catch(error=>{\n        if(error.response.status === 404)\n        throw new Error(\"Garage inconnu\");\n    });\n    return reponse.status;\n}\nconst postGarage = async(nom,adresse,numTel,image)=>{\n    console.log(nom);\n    const reponse = await axios.post(API_URL+\"garage/\",{\n        headers:header,\n        data:{\n            nom : nom,\n            adresse : adresse,\n            numTel : numTel,\n            image : image\n        }\n    }).catch(error=>{\n        if(error.response.status===500){\n            throw new Error(\"Erreur sdur le serveur\")\n        }else if(error.response.status === 400){\n            throw new Error(\"Erreur sur les éléments de la requête\");\n        }\n    });\n    return reponse.data;\n}\nconst updateGarage = async(id,nom,adresse,numTel)=>{\n    const reponse = await axios.patch(API_URL+\"garage/\",{\n        headers:header,\n        data : {\n            id : id,\n            nom:nom,\n            adresse: adresse,\n            numTel : numTel\n        }\n    }).catch(error=>{\n        if(error.response.status === 500){\n            throw new Error(\"Ressource manquante\");\n        }\n    });\n    return reponse.data;\n}\nexport {\n    login,\n    getAllGarage,\n    deleteGarage,\n    postGarage,\n    updateGarage\n}"],"sourceRoot":""}