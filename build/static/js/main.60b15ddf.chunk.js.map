{"version":3,"sources":["component/API/index.js","component/Connection.js","component/Menu.js","component/Garage/AddGarage.js","component/Garage/RowReadGarage.js","component/Garage/RowEditGarage.js","component/Garage/GarageTable.js","component/Garage/SelectMechanics.js","component/Garage/MechanicTableSelected.js","routes/Routes.js","App.js","serviceWorker.js","store/index.js","index.js","component/API/API.js"],"names":["api","require","login","adresseMail","password","a","undefined","Error","getAllGarage","deleteGarage","idGarage","postGarage","garage","console","log","name","address","phoneNumber","image","Connection","props","state","email","loaded","loading","errorMassage","connected","this","setState","error","errorMessage","data","user","userRecup","userType","evt","target","value","contentMessage","to","Grid","item","Typography","component","color","className","container","justify","direction","spacing","TextField","type","label","onChange","event","userChange","required","autoFocus","passwordChange","onKeyPress","code","dissmisError","handleSubmit","then","Button","variant","onClick","React","Component","connect","dispatch","payload","userInfo","Menu","prevProps","prevState","snapshot","Link","userStore","AddGarage","renderTableHeader","bind","element","map","column","index","placeholder","nameChange","imageChange","submit","RowReadGarage","handleEditClick","height","width","src","delete","id","RowEditGarage","TableauGarage","preventDefault","idEdit","getAllElements","deleteElement","elements","idDelete","response","catch","tab","titles","push","title","SelectMechanics","handleSelection","onSubmit","handleChange","MechanicTableSelected","mechanic","GarageTable","Routes","path","Login","render","App","Boolean","window","location","hostname","match","store","createStore","combineReducers","action","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","API_URL","header","axios","post","headers","status","reponse","token","get","JSON","stringify","nom","adresse","numTel","updateGarage","patch"],"mappings":"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","file":"static/js/main.60b15ddf.chunk.js","sourcesContent":["const api = require('./API');\n\nconst login = async(adresseMail,password)=>{\n    if(adresseMail!==undefined && password!==undefined){\n        return await api.login(adresseMail,password);\n    }else\n        throw new Error(\"Identfiants manquants\");\n}\nconst getAllGarage = async ()=>{\n    return await api.getAllGarage();\n}\nconst deleteGarage = async (idGarage)=>{\n    if(idGarage!==undefined){\n        return await api.deleteGarage(idGarage);\n    }else{\n        throw new Error(\"Identifiant du garage incorrect\");\n    }\n}\nconst postGarage = async(garage)=>{\n    console.log(garage);\n    if(garage !== undefined){\n        return await api.postGarage(garage.name,garage.address,garage.phoneNumber,garage.image);\n    }else{\n        throw new Error(\"Erreur composant le garage manquant\");\n    }\n}\nconst updateGarage = async(id,nom,adresse,numTel)=>{\n    if(id!==undefined && nom !== undefined && adresse !== undefined && numTel!== undefined){\n        return await api.updateGarage(id,nom,adresse,numTel);\n    }{\n        throw new Error(\"Les informations à envoyer à l'pi ne sont pas bonnes\");\n    }\n}\nexport {\n    login,\n    getAllGarage,\n    deleteGarage,\n    postGarage,\n    updateGarage\n}","import React, {useState} from \"react\";\nimport \"../style/connectionStyle.css\";\nimport {login} from \"./API\";\nimport {\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\n\nclass Connection extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password:'',\n            loaded:false,\n            loading:false,\n        errorMassage:false,\n        connected:false};\n\n    }\n    dissmisError(){\n        this.setState({error:\"\"});\n    }\n    async handleSubmit(){\n        this.setState({error:false,\n        errorMessage:\"\",\n        loading:true,\n        loaded:false});\n        try{\n            const data = await login(this.state.email,this.state.password);\n            if(data.user.userRecup.userType !== \"mecano\") {\n                throw new Error(\"Un client ne peut pas se connecter à l'application!\");\n            }\n            this.props.login(data.user.userRecup);\n            this.setState({\n                connected:true});\n        }catch (error) {\n            this.setState({\n                error : true,\n                loading:false,\n                loaded:true,\n                errorMessage:error\n            });\n        }\n    }\n    userChange(evt){\n        this.setState({email:evt.target.value});\n    }\n    passwordChange(evt){\n        this.setState({password:evt.target.value});\n    }\n\n\n    render() {\n            if(this.state.connected){\n                return <Redirect to={\"/menu\"}/>\n            }\n            let contentMessage;\n            if(!this.state.loaded)\n                contentMessage = null;\n            else if(this.state.loading){\n                contentMessage = <Grid item><Typography component={\"h6\"} color={\"error\"}>Chargement en cours</Typography> </Grid>;\n            }else if(this.state.error){\n                contentMessage = <Grid item><Typography component={\"h6\"} color={\"error\"}>{this.state.errorMassage}</Typography> </Grid>\n            }\n            return (\n                <div className=\"gridConnection\">\n                <Grid container  justify={\"center\"} direction={\"row\"}>\n                    <Grid item>\n                        <Grid container direction={\"column\"} justify={\"center\"} className={\"login-form\"}>\n                            <Grid item>\n                                <Typography component={\"h1\"}>Se connecter</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Grid container direction={\"column\"} spacing={3}>\n                                    <Grid item>\n                                        <TextField\n                                        type={\"text\"}\n                                        label={\"Adresse mail\"}\n                                        value={this.state.email}\n                                        onChange={(event)=>this.userChange(event)} required={true} autoFocus\n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <TextField\n                                        type={\"password\"}\n                                        label={\"Mot de passe\"}\n                                        value={this.state.password}\n                                        onChange={(event)=>this.passwordChange(event)}\n                                        onKeyPress={(event)=>{\n                                            if(event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n                                                this.dissmisError();\n                                                this.handleSubmit().then();\n                                            }\n                                        }}\n                                        required\n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            variant={\"contained\"}\n                                            type={\"submit\"}\n                                            className={\"button-block\"}\n                                            onClick={()=>{\n                                                this.dissmisError();\n                                                this.handleSubmit();\n                                            }}>\n                                            Connexion\n                                        </Button>\n                                    </Grid>\n                                    {contentMessage && contentMessage}\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                    </Grid>\n                </Grid>\n                </div>\n            )\n\n\n    }\n}\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        login : (user)=>{\n            dispatch({type:\"login\", payload:{userInfo:user}})\n        }\n    }\n}\nexport default connect(undefined,mapDispatchToProps)(Connection);","import React, {useState} from \"react\";\nimport \"../style/menuStyle.css\";\nimport \"../style/mainStyle.css\";\nimport {\n    Button\n} from \"@material-ui/core\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nclass Menu extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            user : this.props.user\n        }\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n    }\n\n    render() {\n        return(\n            <div className=\"menu\">\n                <Button\n                    variant={\"contained\"}\n                    component={Link} to={\"/garages\"}>\n                    Modifier les garages\n                </Button>\n                <Button\n                    variant={\"contained\"}\n                    component={Link} to={\"/mechanics\"}>\n                    Modifier les mécaniciens\n                </Button>\n                <Button\n                    variant={\"contained\"}\n                    component={Link} to={\"/schedules\"}>\n                    Modifier les horaires\n                </Button>\n                <Button\n                    variant={\"contained\"}\n                    component={Link} to={\"/repairs\"}>\n                    Modifier les reparations\n                </Button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state)=>{\n    console.log(\"Matthys\");\n    return {\n        user : state.userStore\n    }\n}\nconst dispatchToProps = (dispatch)=>{\n    return {\n        login : (user)=>{\n            dispatch({type:\"login\", payload:{userInfo:user}})\n        }\n    }\n}\n\nexport default connect(mapStateToProps,dispatchToProps)(Menu);","import React from \"react\";\nimport {TextField} from \"@material-ui/core\";\nimport {postGarage} from \"../API/index\";\n\n\nclass AddGarage extends React.Component{\n    constructor(props) {\n        super(props);\n        this.renderTableHeader = this.renderTableHeader.bind(this);\n        this.element = this.element.bind(this)\n        this.state = {\n            name: \"\",\n            address: \"\",\n            phoneNumber: \"\",\n            image: \"\"}\n    }\n    nameChange(evt){\n        this.setState({name:evt.target.value});\n    }\n    addressChange(evt){\n        this.setState({address:evt.target.value});\n    }\n    phoneNumberChange(evt){\n        this.setState({phoneNumber:evt.target.value});\n    }\n    imageChange(evt){\n        this.setState({image:evt.target.value});\n    }\n    submit(name,address,phoneNumber,image){\n\n        const data = postGarage({name:name,address:address,phoneNumber: phoneNumber,image:image});\n    }\n    render() {\n        return(\n            <div className=\"AddGarage\">\n                <h1>Ajouter un garage</h1>\n                {\n                    this.renderTableHeader(this.element).map((column,index)=>{\n                            if(column !== \"image\"){\n                                return(\n                                <input\n                                    type={\"text\"}\n                                    name={this.element[`${column}`]}\n                                    placeholder={this.element[`${column}`]}\n                                    value={this.element[`${column}`]}\n                                    onChange={(event)=>this.nameChange(event)}\n                                    required\n                                >\n                                    {this.element[`${column}`]}\n                                </input>)}\n                                    return(\n                                    <input\n                                        type={\"text\"}\n                                        name={this.element[`${column}`]}\n                                        placeholder={this.element[`${column}`]}\n                                        value={this.element[`${column}`]}\n                                        onChange={event => this.imageChange(event)}\n                                        required\n                                    >\n                                        {this.element[`${column}`]}\n                                    </input>);\n                    })\n                }\n                <button type={\"submit\"} onClick={()=>this.submit(this.state.name,this.state.address,this.state.phoneNumber,this.state.image)}>Add</button>\n            </div>\n        )\n    }\n\n}\n\nexport default AddGarage;","import React from \"react\";\nimport {Button, TextField} from \"@material-ui/core\";\n\nconst RowReadGarage = ({element, handleEditClick ,index,renderTableHeader}) =>{\n    return(\n        <tr>\n            {\n                 renderTableHeader(element).map((column,index)=>{\n                    if(column !== \"image\") {\n                        return <td>{element[`${column}`]}</td>;\n                    }else{\n                        return <img height={\"60px\"} width={\"60px\"} src={element[`${column}`]}/>;\n                    }\n                })\n            }\n            <td>\n                <button type=\"button\" onClick= {(event => handleEditClick(event,index))}>\n                    edit\n                </button>\n                <button type=\"button\" onClick={()=>handleEditClick.delete(element.id)}>\n                    delete\n                </button>\n            </td>\n        </tr>\n    );\n\n}\n\nexport default RowReadGarage;","import React from \"react\";\nimport {TextField} from \"@material-ui/core\";\nimport \"../../style/tableStyle.css\"\n\nconst RowEditGarage = ({handleEditClick, element, renderTableHeader}) =>{\n    return(\n        <tr>\n            {\n                renderTableHeader(element).map((column,index)=>{\n                    return <td>\n                            <input\n                            type={\"text\"}\n                            name={element[`${column}`]}\n                            placeholder={element[`${column}`]}\n                            value={element[`${column}`]}\n                            required\n                        >{element[`${column}`]}</input>\n                        </td>;\n                })\n            }\n            <td>\n                <button type=\"button\">\n                    save\n                </button>\n                <button type=\"button\" onClick= {(event => handleEditClick(event,null))}>\n                    cancel\n                </button>\n            </td>\n        </tr>\n    );\n};\n\nexport default RowEditGarage;","import React,{Fragment, useState} from \"react\";\nimport AddGarage from \"./AddGarage\";\nimport RowReadGarage from \"./RowReadGarage\";\nimport RowEditGarage from \"./RowEditGarage\";\nimport \"../../style/tableStyle.css\";\nimport {getAllGarage} from \"../API\";\n\nclass TableauGarage extends React.Component{\n    constructor(props) {\n        super(props);\n        this.getAllElements = this.props.getAllElements;\n        this.deleteElement= this.props.deleteElement;\n        this.state = {\n            elements: [],\n            idEdit: null,\n            idDelete: null,\n        }\n\n    }\n    componentDidMount() {\n        this.getAllElements().then(response=>this.setState({elements:response})).catch(error=>console.error(error));\n    }\n\n    handleEditClick = (event, index) => {\n        event.preventDefault();\n        this.setState({idEdit : index});\n    }\n\n    renderTableHeader(tab) {\n        let titles = [];\n        for (let name in tab) {\n            if (name !== \"id\") {\n                titles.push(name);\n            }\n        }\n        return titles;\n    }\n    render() {\n        return (\n            <div>\n                <form>\n                <table>\n                    <thead>\n                        <tr>\n                            {\n                                this.renderTableHeader(this.state.elements[0]).map((title,index)=>{\n                                        return <th>{title}</th>;\n\n                                })\n                            }\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.state.elements.map((element,index)=>(\n                            <Fragment>\n                                { this.state.idEdit === index ? (\n                                    <RowEditGarage handleEditClick = {this.handleEditClick} element={element} renderTableHeader={this.renderTableHeader}/>\n                                ) : (\n                                    <RowReadGarage element={element} handleEditClick = {this.handleEditClick = {delete : this.deleteGarage}} index={index} renderTableHeader={this.renderTableHeader}/>\n                                )}\n                            </Fragment>\n                            ))}\n                    </tbody>\n                </table>\n                </form>\n                <AddGarage renderTableHeader={this.renderTableHeader()} element = {this.state.elements[0]}/>\n            </div>\n\n        )\n    }\n}\nexport default TableauGarage;","import React, {Component} from \"react\";\nimport \"../../style/SelectMechanicsStyle.css\"\n\nclass SelectMechanics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {value : null};\n        this.handleSelection = this.props.handleSelection\n    }\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.handleSelection(event, this.state.value);\n    }\n\n\n    render() {\n        return(\n            <form onSubmit={this.handleSubmit} className=\"SelectMechanics\">\n                <label>\n                    Choisissez un mécanicien :\n                    <select value={this.state.value} onChange={this.handleChange}>\n                        <option value=\"X\">X</option>\n                    </select>\n                </label>\n                <input type=\"submit\" value=\"Envoyer\" />\n            </form>\n        )\n    }\n}\n\nexport default SelectMechanics;","import React from \"react\";\nimport SelectMechanics from \"./SelectMechanics\";\nimport GarageTable from \"./GarageTable\";\n\nclass MechanicTableSelected extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {mechanic: null}\n    }\n\n    handleSelection = (event, mechanic) =>{\n        event.preventDefault();\n        this.state.setState({mechanic: mechanic})\n    }\n\n    render() {\n        return(\n            <div>\n                <SelectMechanics handleSelection = {this.handleSelection}/>\n                <GarageTable/>\n            </div>\n        )\n    }\n}\nexport default MechanicTableSelected;","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport Login from \"../component/Connection\";\nimport Menu from \"../component/Menu\";\nimport Tableau from \"../component/Garage/GarageTable\"\nimport MechanicTableSelected from \"../component/Garage/MechanicTableSelected\"\nimport {getAllGarage,deleteGarage} from \"../component/API\";\nclass Routes extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            user : undefined\n        }\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.state.user === undefined){\n            this.setState({user:this.props.userStore});\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Router>\n                    <Switch>\n                        <Route path=\"/login\" component={Login}/>\n\n                        <Route path=\"/menu\" render={()=>{\n                            return this.state.user === undefined ? <Redirect to=\"/login\"/>:\n                                (this.state.user.userType === \"mecano\")? <Menu/> : <Redirect to={\"/\"}/>\n                        }}/>\n\n                        <Route path=\"/garages\" render={()=>{\n                        return this.state.user === undefined? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\")?<Tableau getAllElements = {getAllGarage} deleteElement = {deleteGarage}/> : <Redirect to={'/login'}/>\n                        }}/>\n\n                        <Route path=\"/mechanics\" render={()=>{\n                            return this.state.user === undefined? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\")?<Tableau getAllElements = {getAllGarage} deleteElement = {deleteGarage}/> : <Redirect to={'/login'}/>\n                        }}/>\n\n                        <Route path=\"/schedules\" render={()=>{\n                            return this.state.user === undefined? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\")?<MechanicTableSelected getAllElements = {getAllGarage} deleteElement = {deleteGarage}/> : <Redirect to={'/login'}/>\n                        }}/>\n\n                        <Route path=\"/repairs\" render={()=>{\n                            return this.state.user === undefined? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\")?<Tableau getAllElements = {getAllGarage} deleteElement = {deleteGarage}/> : <Redirect to={'/login'}/>\n                        }}/>\n\n                        <Route path={\"/\"} render={()=>{\n                           return this.state.user === undefined ? <Redirect to={\"/login\"}/> : (this.state.user.userType === \"mecano\") ? <Menu/> :  <Redirect to={\"/login\"}/>\n                        }\n                        }\n                        />\n\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    console.log(state.login.userStore);\n    return {\n        userStore: state.login.userStore,\n    }\n};\nexport default connect(mapStateToProps)(Routes);","import React from 'react';\nimport './App.css';\nimport Routes from \"./routes/Routes\";\nimport SelectMechanics from \"./component/Garage/SelectMechanics\";\nfunction App() {\n  return (\n    <div className=\"App\" >\n        <SelectMechanics/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from \"redux\";\n\nconst userReducer = (state = {user : {}}, action) => {\n\n    switch (action.type) {\n        case \"login\" :\n            return {userStore : action.payload.userInfo};\n        default :\n            return state;\n    }\n}\n\n\nconst store = createStore(combineReducers({ login: userReducer}));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}><App/></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from \"axios\";\n\nconst API_URL = \"http://localhost:3001/\";\nlet header = {'Access-Control-Allow-Origin' : \"*\"}\nconst login = async(adresseMail,password)=>{\n\n    const reponse = await axios.post(API_URL+\"user/admin\",{\n        adresseMail,\n        password\n    },{\n        headers : header\n    }).catch(error=>{\n\n        if(error.response.status === 400){\n            throw new Error(\"Les identifiants n'existent pas dans la base de données\");\n        }else if(error.response.status === 404){\n            throw new Error(\"Utilisateur inconnu pour cet administrateur\");\n        }else if(error.response.status === 500){\n            throw new Error(\"Erreur de connexion\");\n        }\n\n    });\n    header = {\n        'Authorization': 'Bearer ' + reponse.data.token,\n        'Accept-version' : \"1.0.0\",\n        'Access-Control-Allow-Origin' : \"*\"\n    }\n    console.log(header);\n    console.log(reponse.data);\n\n\n    return reponse.data;\n\n\n}\nconst getAllGarage = async ()=>{\n    const reponse = await axios.get(API_URL+\"garage/\",{\n    headers : header\n    }).catch(error=>{\n        if(error.response.status === 404)\n            throw new Error(\"Garage inconnu\");\n        else if(error.response.status === 500)\n            throw new Error(\"Erreur de connexion\");\n    });\n    console.log(JSON.stringify(reponse.data));\n    return reponse.data;\n}\nconst deleteGarage = async(idGarage)=>{\n    const reponse = await axios.delete(API_URL+\"garage/\",{\n        headers:header,\n        data:{\n            id : idGarage\n        }\n    }).catch(error=>{\n        if(error.response.status === 404)\n        throw new Error(\"Garage inconnu\");\n    });\n    return reponse.status;\n}\nconst postGarage = async(nom,adresse,numTel,image)=>{\n    console.log(nom);\n    const reponse = await axios.post(API_URL+\"garage/\", {\n        nom,\n        adresse,\n        numTel,\n        image\n    },{\n        headers : header\n\n    }).catch(error=>{\n        if(error.response.status===500){\n            throw new Error(\"Erreur sdur le serveur\")\n        }else if(error.response.status === 400){\n            throw new Error(\"Erreur sur les éléments de la requête\");\n        }\n    });\n    return reponse.data;\n}\nconst updateGarage = async(id,nom,adresse,numTel)=>{\n    const reponse = await axios.patch(API_URL+\"garage/\",{\n        headers:header,\n        data : {\n            id : id,\n            nom:nom,\n            adresse: adresse,\n            numTel : numTel\n        }\n    }).catch(error=>{\n        if(error.response.status === 500){\n            throw new Error(\"Ressource manquante\");\n        }\n    });\n    return reponse.data;\n}\nexport {\n    login,\n    getAllGarage,\n    deleteGarage,\n    postGarage,\n    updateGarage\n}"],"sourceRoot":""}